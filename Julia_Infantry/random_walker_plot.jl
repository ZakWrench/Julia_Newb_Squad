using Makie
using GLMakie
#using Makie.Colors
using Plots
"""
      random_walker(n::Integer)

    Return 'x' and 'y' coordinates of a random walk of 'n' steps
    Both 'x' and 'y' are Arrays.
    Walker starts at coordinates(0, 0) and takes 1 step randomly
    in the positive or negative x or y direction, or left, right, up, or down.
    Walker repeats this process 'n' times.
    The 'x' and 'y' coordinates ofr each step is recorded in the 'x' and 'y' Arrays.
"""

function randomwalker(n::Integer)
  x = [0]
  y = [0]
  for i in 1:n
    step = rand((-1, 1))
    direction = rand(("x", "y"))
    if direction == "x"
      push!(x, x[i] + step)
      push!(y, y[i])
    else
      push!(x, x[i])
      push!(y, y[i] + step)
    end
  end
  return x, y
end


"""
        randomwalkerplots(walkers::Integer, steps::Integer)

    Generate Plots based on the 'x' and 'y' Arrays generated by random_walker()
    Different Plots in different colors are generated for each walker and
    displayed onto a single Plot.

    #Examples
    ```jldoctest
    julia> randomwalkerplots(3, 100)
    julia> randomwalkerplots(5, 500)
    ```
    the 1st example will generate a Plot for 1 Walker taking 100 steps,
    the 2nd example will generate a Plot for 5 Walkers taking 500 steps.
     
"""

function randomwalkerplots(walkers::Integer, steps::Integer)
  plt = Plots.plot()
  for i in 1:walkers
    x, y = randomwalker(steps)
    # The ! in the function name denotes that it is a mutating function,
    # meaning it will modify the scene object in place.
    Plots.lines!(plt, x, y, linewidth=5, color=(rand(RGBf), 0.5))
  end
  display(plt)
end

function randomwalkerplots_2(walkers::Integer, steps::Integer)
  scene = Scene()
  for i in 1:walkers
    x, y = randomwalker(steps)
    lines!(x, y, linewidth=5, color=(rand(RGBf), 0.5))
  end
  display(scene)
end
save("test.png", randomwalkerplots_2(3, 100))

randomwalkerplots_2(3, 100)
